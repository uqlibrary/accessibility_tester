{
  "name": "grunt-accessibility",
  "description": "Grade your sites accessibility and generate a report from different WCAG levels",
  "version": "1.2.1",
  "homepage": "https://github.com/yargalot/grunt-accessibility",
  "author": {
    "name": "Steven John Miller",
    "url": "http://www.stevenjohnmiller.com/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yargalot/grunt-accessibility.git"
  },
  "bugs": {
    "url": "https://github.com/yargalot/grunt-accessibility/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/yargalot/grunt-accessibility/blob/master/LICENSE"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.3.3",
    "grunt-contrib-jshint": "~0.9.2",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-contrib-uglify": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.4"
  },
  "keywords": [
    "gruntplugin"
  ],
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "grunt": "~0.4.4",
    "grunt-lib-phantomjs": "~0.6.0",
    "underscore": "~1.6.0",
    "bluebird": "~2.2.2"
  },
  "readme": "# Grunt Accessibility\n\nGrade your sites accessibility using different levels of the WCAG guidelines\n\n[![NPM version](https://badge.fury.io/js/grunt-accessibility.png)](http://badge.fury.io/js/grunt-accessibility) [![Build Status](https://travis-ci.org/yargalot/grunt-accessibility.svg?branch=master)](https://travis-ci.org/yargalot/grunt-accessibility) [![Dependency Status](https://gemnasium.com/yargalot/grunt-accessibility.png)](https://gemnasium.com/yargalot/grunt-accessibility) [![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n## Getting Started\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-accessibility`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-accessibility');\n```\n\n[grunt]: http://gruntjs.com/\n[getting_started]: http://gruntjs.com/getting-started\n\n## Documentation\nPlace this in your grunt file.\n\n```javascript\naccessibility: {\n  options : {\n    accessibilityLevel: 'WCAG2A'\n  },\n  test : {\n    files: [{\n      expand  : true,\n      cwd     : 'example/',\n      src     : ['*.html'],\n      dest    : 'reports/',\n      ext     : '-report.txt'\n    }]\n  }\n}\n```\n\n## Report Generation\nYou can link to the files you wish to lint using the grunt api. The result will be the results file.\n\n## Options\nYou can pass some options\n\n### Accessibility Level\n```accessibilityLevel``` is a string\n\n```javascript\n  options: {\n    accessibilityLevel: 'WCAG2A'\n  }\n```\n\nLevels are ```WCAG2A```, ```WCAG2AA```, and ```WCAG2AAA```\n\n\n### Ignore\n\n```ignore``` is a array\n\nYou can ignore rules by placing them in an array outlined below\n\n```javascript\n  ignore : [\n    'WCAG2A.Principle2.Guideline2_4.2_4_2.H25.1.NoTitleEl'\n    'WCAG2A.Principle3.Guideline3_1.3_1_1.H57.2'\n  ]\n```\n\n### Output Format\n\n```outputFormat``` is a string\n\n```javascript\n  options: {\n    outputFormat: 'json'\n  }\n```\n\n\nText and JSON format output, default is current text format\n\n- 'txt' will output text files\n- 'json' will output .json files\n\n\n### Verbose output\n\n```verbose``` is a boolean\n\n```javascript\n  options: {\n    verbose: false\n  }\n```\n\nOutput messages to console, set to true by default\n\n\n### DomElement\n\n``` domElement ``` is a boolean\n\n```javascript\n  options: {\n    domElement: false\n  }\n```\n\nInclude reference (tag name, class names & id) to reported  elements. Optional for both output formats.\n\n### Force\n\n```force``` is a boolean\n\n```javascript\n  options: {\n    force: true\n  }\n```\n\nContinue running grunt in the event of failures\n\n\n## Built from\nThis is built of [HTML Codesniffer](http://github.com/squizlabs/HTML_CodeSniffer)\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\n## Release History\n\n### [1.1.0](https://github.com/yargalot/grunt-accessibility/issues?milestone=3&page=1&state=closed)\n- Add JSON report option\n- Add Dom Element option\n- Add Force option\n- Add Verbose option\n\n### [1.0.0](https://github.com/yargalot/grunt-accessibility/issues?milestone=2&state=closed)\n- Exit phantom process when processing is done\n- Update Dependencies\n- Update to grunt 0.4.4\n\n### Previous Releases\n- 0.4 Added in ignore rule, refactored some scripts for better injection via phantom\n- 0.3 Fix so you can run another grunt process after running\n- 0.2 Fix so people can actually run this thing now\n- 0.1.1 Update Documentation for install\n- 0.1 Initial release\n\n## License\nCopyright (c) 2014 Steven Miller\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-accessibility@1.2.1",
  "_from": "grunt-accessibility@"
}
